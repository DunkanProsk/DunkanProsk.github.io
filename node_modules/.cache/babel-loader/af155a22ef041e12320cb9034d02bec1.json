{"ast":null,"code":"var _jsxFileName = \"/Users/denisaleksandrovic/Desktop/TodoList-React.js/src/App.js\";\nimport React from 'react';\nimport TodoList from './Todo/TodoList';\nimport AddTodo from './Todo/AddTodo';\nconst styles = {\n  body: {\n    padding: \"1rem 3rem\",\n    margin: \"0 auto\",\n    width: \"600px\"\n  },\n  body__title: {\n    color: '#BABECC',\n    textShadow: '1px 1px 1px #ffffff',\n    display: 'flex',\n    justifyContent: 'center',\n    fontSize: '40px'\n  },\n  body__text: {\n    textAlign: 'center',\n    marginBottom: '20px'\n  }\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  setTodoList(todoList) {\n    return React.useState([{\n      id: 1,\n      completed: false,\n      title: 'buy apples'\n    }, {\n      id: 2,\n      completed: false,\n      title: 'buy bananas'\n    }, {\n      id: 3,\n      completed: false,\n      title: 'buy paper'\n    }]);\n  }\n\n  toggleTodo(id) {\n    setTodoList(todoList.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n\n      ;\n      return todo;\n    }));\n  }\n\n  removeTodo(id) {\n    setTodoList(todoList.filter(todo => todo.id !== id));\n  }\n\n  addTodo(title) {\n    setTodoList(todoList.concat([{\n      title,\n      id: Date.now(),\n      completed: false\n    }]));\n  }\n\n  valComp() {\n    let val = 0;\n\n    for (let i = 0; i < todoList.length; i++) {\n      if (todoList[i].completed === true) ++val;\n    }\n\n    ;\n    return val;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: styles.body__title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, \"To-Do List\"), /*#__PURE__*/React.createElement(AddTodo, {\n      onCreate: this.addTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: styles.body__text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, \"Total: \", this.todoList.length, \" \\xA0 \\xA0 Completed: \", valComp()), todoList.length ? /*#__PURE__*/React.createElement(TodoList, {\n      todo: this.todoList,\n      onToggle: this.toggleTodo,\n      removeTodo: this.removeTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      style: styles.body__text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, \"no todos\"));\n  }\n\n}\n\n; // function App() {\n//   const [todoList, setTodoList] = React.useState([\n//     { id: 1, completed: false, title: 'buy apples' },\n//     { id: 2, completed: false, title: 'buy bananas' },\n//     { id: 3, completed: false, title: 'buy paper' },\n//   ])\n//   function toggleTodo(id) {\n//     setTodoList(\n//       todoList.map(todo => {\n//         if(todo.id === id) {\n//           todo.completed = !todo.completed;\n//         };\n//         return todo;\n//       })\n//     )\n//   };\n//   function removeTodo(id) {\n//     setTodoList(todoList.filter(todo => todo.id !== id));\n//   };\n//   function addTodo(title) {\n//     setTodoList(todoList.concat([{\n//       title,\n//       id: Date.now(),\n//       completed: false,\n//     }]));\n//   };\n//   function valComp() {\n//     let val = 0;\n//     for(let i = 0; i < todoList.length; i++) {\n//       if (todoList[i].completed === true) ++val;\n//     };\n//     return val;\n//   };\n//   return (\n//     <div style={styles.body}>\n//       <h1 style={styles.body__title}>To-Do List</h1>\n//       <AddTodo onCreate={addTodo}/>\n//       <p style={styles.body__text}>\n//         Total: {todoList.length} &nbsp; &nbsp; Completed: {valComp()}\n//       </p>\n//       {todoList.length\n//         ? <TodoList\n//           todo={todoList}\n//           onToggle={toggleTodo}\n//           removeTodo={removeTodo}\n//           /> \n//         : <p style={styles.body__text}>no todos</p>\n//       }\n//     </div>\n//   );\n// };\n\nexport default App;","map":{"version":3,"sources":["/Users/denisaleksandrovic/Desktop/TodoList-React.js/src/App.js"],"names":["React","TodoList","AddTodo","styles","body","padding","margin","width","body__title","color","textShadow","display","justifyContent","fontSize","body__text","textAlign","marginBottom","App","Component","constructor","props","setTodoList","todoList","useState","id","completed","title","toggleTodo","map","todo","removeTodo","filter","addTodo","concat","Date","now","valComp","val","i","length","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TodoList from './Todo/TodoList';\nimport AddTodo from './Todo/AddTodo';\n\nconst styles = {\n  body: {\n    padding: \"1rem 3rem\",\n    margin: \"0 auto\",\n    width: \"600px\",\n  },\n\n  body__title: {\n    color: '#BABECC',\n    textShadow: '1px 1px 1px #ffffff',\n    display: 'flex',\n    justifyContent: 'center',\n    fontSize: '40px',\n  },\n\n  body__text: {\n    textAlign: 'center',\n    marginBottom: '20px',\n  },\n\n};\n\nclass App extends React.Component {\n\n  constructor(props) { \n    super(props);\n  }\n\n  setTodoList(todoList) {\n    return React.useState([\n      { id: 1, completed: false, title: 'buy apples' },\n      { id: 2, completed: false, title: 'buy bananas' },\n      { id: 3, completed: false, title: 'buy paper' },\n    ]);\n  }\n\n  toggleTodo(id) {\n    setTodoList(\n      todoList.map(todo => {\n        if(todo.id === id) {\n          todo.completed = !todo.completed;\n        };\n        return todo;\n      })\n    )\n  }\n\n  removeTodo(id) {\n    setTodoList(todoList.filter(todo => todo.id !== id));\n  }\n\n  addTodo(title) {\n    setTodoList(todoList.concat([{\n      title,\n      id: Date.now(),\n      completed: false,\n    }]));\n  }\n\n  valComp() {\n    let val = 0;\n    for(let i = 0; i < todoList.length; i++) {\n      if (todoList[i].completed === true) ++val;\n    };\n    return val;\n  }\n\n  render() {\n    return (\n      <div style={styles.body}>\n        <h1 style={styles.body__title}>To-Do List</h1>\n        <AddTodo onCreate={this.addTodo}/>\n        <p style={styles.body__text}>\n          Total: {this.todoList.length} &nbsp; &nbsp; Completed: {valComp()}\n        </p>\n        {todoList.length\n          ? <TodoList\n            todo={this.todoList}\n            onToggle={this.toggleTodo}\n            removeTodo={this.removeTodo}\n            /> \n          : <p style={styles.body__text}>no todos</p>\n        }\n      </div>\n    );\n  }\n};\n\n// function App() {\n//   const [todoList, setTodoList] = React.useState([\n//     { id: 1, completed: false, title: 'buy apples' },\n//     { id: 2, completed: false, title: 'buy bananas' },\n//     { id: 3, completed: false, title: 'buy paper' },\n//   ])\n\n//   function toggleTodo(id) {\n//     setTodoList(\n//       todoList.map(todo => {\n//         if(todo.id === id) {\n//           todo.completed = !todo.completed;\n//         };\n//         return todo;\n//       })\n//     )\n//   };\n\n//   function removeTodo(id) {\n//     setTodoList(todoList.filter(todo => todo.id !== id));\n//   };\n\n//   function addTodo(title) {\n//     setTodoList(todoList.concat([{\n//       title,\n//       id: Date.now(),\n//       completed: false,\n//     }]));\n//   };\n\n//   function valComp() {\n//     let val = 0;\n//     for(let i = 0; i < todoList.length; i++) {\n//       if (todoList[i].completed === true) ++val;\n//     };\n//     return val;\n//   };\n\n//   return (\n//     <div style={styles.body}>\n//       <h1 style={styles.body__title}>To-Do List</h1>\n//       <AddTodo onCreate={addTodo}/>\n//       <p style={styles.body__text}>\n//         Total: {todoList.length} &nbsp; &nbsp; Completed: {valComp()}\n//       </p>\n//       {todoList.length\n//         ? <TodoList\n//           todo={todoList}\n//           onToggle={toggleTodo}\n//           removeTodo={removeTodo}\n//           /> \n//         : <p style={styles.body__text}>no todos</p>\n//       }\n//     </div>\n//   );\n// };\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}